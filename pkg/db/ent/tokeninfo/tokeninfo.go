// Code generated by ent, DO NOT EDIT.

package tokeninfo

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the tokeninfo type in the database.
	Label = "token_info"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldChainType holds the string denoting the chain_type field in the database.
	FieldChainType = "chain_type"
	// FieldTokenType holds the string denoting the token_type field in the database.
	FieldTokenType = "token_type"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldDecimal holds the string denoting the decimal field in the database.
	FieldDecimal = "decimal"
	// FieldOfficialContract holds the string denoting the official_contract field in the database.
	FieldOfficialContract = "official_contract"
	// FieldPrivateContract holds the string denoting the private_contract field in the database.
	FieldPrivateContract = "private_contract"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// Table holds the table name of the tokeninfo in the database.
	Table = "token_infos"
)

// Columns holds all SQL columns for tokeninfo fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldChainType,
	FieldTokenType,
	FieldUnit,
	FieldDecimal,
	FieldOfficialContract,
	FieldPrivateContract,
	FieldRemark,
	FieldData,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/build-chain/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultChainType holds the default value on creation for the "chain_type" field.
	DefaultChainType string
	// DefaultTokenType holds the default value on creation for the "token_type" field.
	DefaultTokenType string
	// DefaultUnit holds the default value on creation for the "unit" field.
	DefaultUnit string
	// DefaultDecimal holds the default value on creation for the "decimal" field.
	DefaultDecimal string
	// DefaultRemark holds the default value on creation for the "remark" field.
	DefaultRemark string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
