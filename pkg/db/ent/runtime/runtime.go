// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/build-chain/pkg/db/ent/coininfo"
	"github.com/NpoolPlatform/build-chain/pkg/db/ent/schema"
	"github.com/google/uuid"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	coininfoMixin := schema.CoinInfo{}.Mixin()
	coininfo.Policy = privacy.NewPolicies(coininfoMixin[0], schema.CoinInfo{})
	coininfo.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := coininfo.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	coininfoMixinFields0 := coininfoMixin[0].Fields()
	_ = coininfoMixinFields0
	coininfoFields := schema.CoinInfo{}.Fields()
	_ = coininfoFields
	// coininfoDescCreatedAt is the schema descriptor for created_at field.
	coininfoDescCreatedAt := coininfoMixinFields0[0].Descriptor()
	// coininfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	coininfo.DefaultCreatedAt = coininfoDescCreatedAt.Default.(func() uint32)
	// coininfoDescUpdatedAt is the schema descriptor for updated_at field.
	coininfoDescUpdatedAt := coininfoMixinFields0[1].Descriptor()
	// coininfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	coininfo.DefaultUpdatedAt = coininfoDescUpdatedAt.Default.(func() uint32)
	// coininfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	coininfo.UpdateDefaultUpdatedAt = coininfoDescUpdatedAt.UpdateDefault.(func() uint32)
	// coininfoDescDeletedAt is the schema descriptor for deleted_at field.
	coininfoDescDeletedAt := coininfoMixinFields0[2].Descriptor()
	// coininfo.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	coininfo.DefaultDeletedAt = coininfoDescDeletedAt.Default.(func() uint32)
	// coininfoDescChainType is the schema descriptor for chain_type field.
	coininfoDescChainType := coininfoFields[2].Descriptor()
	// coininfo.DefaultChainType holds the default value on creation for the chain_type field.
	coininfo.DefaultChainType = coininfoDescChainType.Default.(string)
	// coininfoDescTokenType is the schema descriptor for token_type field.
	coininfoDescTokenType := coininfoFields[3].Descriptor()
	// coininfo.DefaultTokenType holds the default value on creation for the token_type field.
	coininfo.DefaultTokenType = coininfoDescTokenType.Default.(string)
	// coininfoDescRemark is the schema descriptor for remark field.
	coininfoDescRemark := coininfoFields[6].Descriptor()
	// coininfo.DefaultRemark holds the default value on creation for the remark field.
	coininfo.DefaultRemark = coininfoDescRemark.Default.(string)
	// coininfoDescID is the schema descriptor for id field.
	coininfoDescID := coininfoFields[0].Descriptor()
	// coininfo.DefaultID holds the default value on creation for the id field.
	coininfo.DefaultID = coininfoDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.11.2"                                         // Version of ent codegen.
	Sum     = "h1:UM2/BUhF2FfsxPHRxLjQbhqJNaDdVlOwNIAMLs2jyto=" // Sum of ent codegen.
)
