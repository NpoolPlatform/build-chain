// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/build-chain/pkg/db/ent/schema"
	"github.com/NpoolPlatform/build-chain/pkg/db/ent/tokeninfo"
	"github.com/google/uuid"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	tokeninfoMixin := schema.TokenInfo{}.Mixin()
	tokeninfo.Policy = privacy.NewPolicies(tokeninfoMixin[1], schema.TokenInfo{})
	tokeninfo.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := tokeninfo.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tokeninfoMixinFields0 := tokeninfoMixin[0].Fields()
	_ = tokeninfoMixinFields0
	tokeninfoMixinFields1 := tokeninfoMixin[1].Fields()
	_ = tokeninfoMixinFields1
	tokeninfoFields := schema.TokenInfo{}.Fields()
	_ = tokeninfoFields
	// tokeninfoDescEntID is the schema descriptor for ent_id field.
	tokeninfoDescEntID := tokeninfoMixinFields0[1].Descriptor()
	// tokeninfo.DefaultEntID holds the default value on creation for the ent_id field.
	tokeninfo.DefaultEntID = tokeninfoDescEntID.Default.(func() uuid.UUID)
	// tokeninfoDescCreatedAt is the schema descriptor for created_at field.
	tokeninfoDescCreatedAt := tokeninfoMixinFields1[0].Descriptor()
	// tokeninfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	tokeninfo.DefaultCreatedAt = tokeninfoDescCreatedAt.Default.(func() uint32)
	// tokeninfoDescUpdatedAt is the schema descriptor for updated_at field.
	tokeninfoDescUpdatedAt := tokeninfoMixinFields1[1].Descriptor()
	// tokeninfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tokeninfo.DefaultUpdatedAt = tokeninfoDescUpdatedAt.Default.(func() uint32)
	// tokeninfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tokeninfo.UpdateDefaultUpdatedAt = tokeninfoDescUpdatedAt.UpdateDefault.(func() uint32)
	// tokeninfoDescDeletedAt is the schema descriptor for deleted_at field.
	tokeninfoDescDeletedAt := tokeninfoMixinFields1[2].Descriptor()
	// tokeninfo.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	tokeninfo.DefaultDeletedAt = tokeninfoDescDeletedAt.Default.(func() uint32)
	// tokeninfoDescChainType is the schema descriptor for chain_type field.
	tokeninfoDescChainType := tokeninfoFields[1].Descriptor()
	// tokeninfo.DefaultChainType holds the default value on creation for the chain_type field.
	tokeninfo.DefaultChainType = tokeninfoDescChainType.Default.(string)
	// tokeninfoDescTokenType is the schema descriptor for token_type field.
	tokeninfoDescTokenType := tokeninfoFields[2].Descriptor()
	// tokeninfo.DefaultTokenType holds the default value on creation for the token_type field.
	tokeninfo.DefaultTokenType = tokeninfoDescTokenType.Default.(string)
	// tokeninfoDescUnit is the schema descriptor for unit field.
	tokeninfoDescUnit := tokeninfoFields[3].Descriptor()
	// tokeninfo.DefaultUnit holds the default value on creation for the unit field.
	tokeninfo.DefaultUnit = tokeninfoDescUnit.Default.(string)
	// tokeninfoDescDecimal is the schema descriptor for decimal field.
	tokeninfoDescDecimal := tokeninfoFields[4].Descriptor()
	// tokeninfo.DefaultDecimal holds the default value on creation for the decimal field.
	tokeninfo.DefaultDecimal = tokeninfoDescDecimal.Default.(string)
	// tokeninfoDescRemark is the schema descriptor for remark field.
	tokeninfoDescRemark := tokeninfoFields[7].Descriptor()
	// tokeninfo.DefaultRemark holds the default value on creation for the remark field.
	tokeninfo.DefaultRemark = tokeninfoDescRemark.Default.(string)
}

const (
	Version = "v0.11.2" // Version of ent codegen.
)
